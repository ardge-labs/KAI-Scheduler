# Copyright 2025 NVIDIA CORPORATION
# SPDX-License-Identifier: Apache-2.0

name: KAI Scheduler - Upload artifacts to GitHub Container Registry
on:
  push:
    branches:
      - "dev"
    tags:
      - '*.*.*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKER_REGISTRY: "ghcr.io/ardge-labs/kai-scheduler"

jobs:
  build-and-push:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract package version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          PACKAGE_VERSION=${GITHUB_REF_NAME}
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo $PACKAGE_VERSION

      - name: Extract package version from branch commit
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          PACKAGE_VERSION=0.0.0-$(git rev-parse --short HEAD)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo $PACKAGE_VERSION

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine branch for tag
        if: startsWith(github.ref, 'refs/tags/')
        id: tag_branch
        run: |
          # Get the branch that contains this tag
          BRANCH=$(git branch -r --contains ${{ github.ref_name }} | grep -v HEAD | head -1 | sed 's/.*\///')
          echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT
          echo "Tag ${{ github.ref_name }} is on branch: $BRANCH"

      - name: Docker build & push (with version tag)
        run: make build DOCKER_BUILD_PLATFORM=linux/amd64,linux/arm64 DOCKER_REPO_BASE=${{ env.DOCKER_REGISTRY }} VERSION=$PACKAGE_VERSION DOCKER_BUILDX_ADDITIONAL_ARGS=--push

      - name: Docker build & push (with dev tag for branch push)
        if: startsWith(github.ref, 'refs/heads/dev')
        run: make build DOCKER_BUILD_PLATFORM=linux/amd64,linux/arm64 DOCKER_REPO_BASE=${{ env.DOCKER_REGISTRY }} VERSION=0.0.0-dev DOCKER_BUILDX_ADDITIONAL_ARGS=--push

      - name: Docker build & push (with dev tag for tagged release)
        if: startsWith(github.ref, 'refs/tags/') && steps.tag_branch.outputs.BRANCH == 'dev'
        run: make build DOCKER_BUILD_PLATFORM=linux/amd64,linux/arm64 DOCKER_REPO_BASE=${{ env.DOCKER_REGISTRY }} VERSION=0.0.0-dev DOCKER_BUILDX_ADDITIONAL_ARGS=--push

      - name: Docker build & push (with latest tag)
        if: startsWith(github.ref, 'refs/tags/') && steps.tag_branch.outputs.BRANCH != 'dev'
        run: make build DOCKER_BUILD_PLATFORM=linux/amd64,linux/arm64 DOCKER_REPO_BASE=${{ env.DOCKER_REGISTRY }} VERSION=0.0.0-latest DOCKER_BUILDX_ADDITIONAL_ARGS=--push

      - name: Build helm chart
        run: |
          sed -i 's#registry/local/kai-scheduler#${{ env.DOCKER_REGISTRY }}#' deployments/kai-scheduler/values.yaml
          helm package ./deployments/kai-scheduler -d ./charts --app-version $PACKAGE_VERSION --version $PACKAGE_VERSION

      - name: Push Helm Chart (with version tag)
        run: |
          helm push ./charts/kai-scheduler-$PACKAGE_VERSION.tgz oci://${{ env.DOCKER_REGISTRY }}

      - name: Build and Push Helm Chart (with dev tag for branch push)
        if: startsWith(github.ref, 'refs/heads/dev')
        run: |
          helm package ./deployments/kai-scheduler -d ./charts --app-version 0.0.0-dev --version 0.0.0-dev
          helm push ./charts/kai-scheduler-dev.tgz oci://${{ env.DOCKER_REGISTRY }}

      - name: Build and Push Helm Chart (with dev tag for tagged release)
        if: startsWith(github.ref, 'refs/tags/') && steps.tag_branch.outputs.BRANCH == 'dev'
        run: |
          helm package ./deployments/kai-scheduler -d ./charts --app-version 0.0.0-dev --version 0.0.0-dev
          helm push ./charts/kai-scheduler-dev.tgz oci://${{ env.DOCKER_REGISTRY }}

      - name: Build and Push Helm Chart (with latest tag)
        if: startsWith(github.ref, 'refs/tags/') && steps.tag_branch.outputs.BRANCH != 'dev'
        run: |
          helm package ./deployments/kai-scheduler -d ./charts --app-version 0.0.0-latest --version 0.0.0-latest
          helm push ./charts/kai-scheduler-latest.tgz oci://${{ env.DOCKER_REGISTRY }}
